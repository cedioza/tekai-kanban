version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: tekai-postgres
    environment:
      POSTGRES_DB: tekai_db
      POSTGRES_USER: tekai_user
      POSTGRES_PASSWORD: tekai_password_2024
      POSTGRES_MULTIPLE_DATABASES: n8n_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init-multiple-dbs.sh:/docker-entrypoint-initdb.d/init-multiple-dbs.sh
    ports:
      - "5432:5432"
    networks:
      - tekai-network
    restart: unless-stopped

  # n8n Workflow Automation
  n8n:
    image: n8nio/n8n:latest
    container_name: tekai-n8n
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n_db
      - DB_POSTGRESDB_USER=tekai_user
      - DB_POSTGRESDB_PASSWORD=tekai_password_2024
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=admin123
      - WEBHOOK_URL=http://localhost:5678
      - GENERIC_TIMEZONE=America/Mexico_City
      - N8N_CORS_ORIGIN=http://localhost:3001,http://localhost:3000,http://localhost:5173
      - N8N_DISABLE_UI=false
      - N8N_SECURE_COOKIE=false
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
      - ./docker/n8n/workflows:/home/node/.n8n/workflows
    depends_on:
      - postgres
    networks:
      - tekai-network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: tekai-backend
    environment:
      - NODE_ENV=production
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=tekai_db
      - POSTGRES_USER=tekai_user
      - POSTGRES_PASSWORD=tekai_password_2024
      - PORT=3000
      - N8N_WEBHOOK_URL=http://n8n:5678
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    networks:
      - tekai-network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: tekai-frontend
    environment:
      - VITE_API_URL=http://localhost:3000
      - VITE_N8N_URL=http://localhost:5678
    ports:
      - "3001:80"
    depends_on:
      - backend
    networks:
      - tekai-network
    restart: unless-stopped

volumes:
  postgres_data:
  n8n_data:

networks:
  tekai-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16